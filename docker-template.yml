apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: template-python-flask
objects:
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      description: Keeps track of changes in the application image
    labels:
      app: ${APP_NAME}
      template: template-python-flask
    name: ${APP_NAME}
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    annotations:
      description: Defines how to build the application
    labels:
      app: ${APP_NAME}
      template: template-python-flask
    name: ${APP_NAME}
    namespace: ${PROJECT_NAME}
  spec:
    failedBuildsHistoryLimit: 5
    successfulBuildsHistoryLimit: 5
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: '${APP_NAME}:latest'
    source:
      type: Git
      git:
        uri: ${APP_GIT_URL}
        ref: ${BRANCH_NAME}
      contextDir: /
    strategy:
      type: Docker
      dockerStrategy:
        dockerfilePath: Dockerfile
      postCommit: {}
    triggers:
    - type: Generic
      generic:
        secretReference:
          name: ${APP_NAME}-generic-webhook-secret
    - type: ConfigChange
    - type: GitHub
      github:
        secretReference:
          name: ${APP_NAME}-github-webhook-secret
  runPolicy: Serial
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${APP_NAME}
      template: template-python-flask
    name: ${APP_NAME}
    namespace: ${PROJECT_NAME}
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    strategy:
      type: Rolling
      rollingParams:
        updatePeriodSeconds: 1
        intervalSeconds: 1
        timeoutSeconds: 600
        maxUnavailable: 25%
        maxSurge: 25%
      resources:
        limits:
          memory: 64Mi
        requests:
          memory: 32Mi
      activeDeadlineSeconds: 21600
    template:
      metadata:
       labels:
          app: ${APP_NAME}
          deploymentconfig: ${APP_NAME}
      spec:
        containers:
          - name: ${APP_NAME}
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            imagePullPolicy: Always
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        dnsPolicy: ClusterFirst
        securityContext: {}
        schedulerName: default-scheduler
    test: false
    selector:
      app: ${APP_NAME}
      deploymentconfig: ${APP_NAME}
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
          - ${APP_NAME}
        from:
          kind: ImageStreamTag
          name: '${APP_NAME}:latest'
          namespace: ${PROJECT_NAME}
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    annotations: {}
    name: ${APP_NAME}
    namespace: ${PROJECT_NAME}
    labels:
      app: ${APP_NAME}
      template: template-python-flask
  spec:
    ports:
    - name: http
      port: 3333
      protocol: TCP
      targetPort: 3333
    selector:
      app: ${APP_NAME}
      deploymentconfig: ${APP_NAME}
    sessionAffinity: None
    type: ClusterIP
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations: {}
    labels:
      app: ${APP_NAME}
      template: template-python-flask
    name: ${APP_NAME}
    namespace: ${PROJECT_NAME}
  spec:
    to:
      kind: Service
      name: ${APP_NAME}
      weight: 100
      port:
        targetPort: http
  wildcardPolicy: None
- apiVersion: v1
  kind: LimitRange
  metadata:
    name: ${PROJECT_NAME}-limits
    creationTimestamp: null
  spec:
    limits:
      - type: Container
        max:
          cpu: 30m
          memory: 256Mi
        min:
          cpu: 5m
          memory: 10Mi
        default:
          cpu: 10m
          memory: 32Mi
        defaultRequest:
          cpu: 10m
          memory: 32Mi
parameters:
- name: APP_NAME
  displayName: Application name
  required: true
- name: PROJECT_NAME
  displayName: Project name
  required: true
- name: APP_GIT_URL
  displayName: Application source GIT URL
  required: true
- name: BRANCH_NAME
  displayName: Branch name
  required: true
  value: master